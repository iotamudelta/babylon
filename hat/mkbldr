#!/usr/bin/env java --enable-preview --source 24 
/*
 * Copyright (c) 2024, Oracle and/or its affiliates. All rights reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Oracle designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Oracle in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA
 * or visit www.oracle.com if you need additional information or have any
 * questions.
 */

import module java.compiler;
import com.sun.source.util.JavacTask;
import javax.tools.ToolProvider;

void main(String[] args) throws IOException, InterruptedException {
     var toolsDir = Path.of(System.getProperty("user.dir")).resolve("bldr");
     var classesDir = toolsDir.resolve("classes");

     // Here we remove all classes from bldr/classes i.e rm -rf bldr/classes
     if (Files.exists(classesDir)) {
        Files.walk(classesDir).sorted(Comparator.reverseOrder()).map(Path::toFile).forEach(File::delete);
     }
     // Now make sure the bldr/classes dir exists i.e mkdir -p bldr/classes
     Files.createDirectories(classesDir);

     JavaCompiler javac = ToolProvider.getSystemJavaCompiler();

     JavacTask javacTask = (JavacTask)javac.getTask(
         null, null, null, 
         List.of( "--source","24", "--enable-preview", "-d", classesDir.toString()),
         null,
         List.of(
            new SimpleJavaFileObject(toolsDir.resolve("src/main/java/bldr/Bldr.java").toUri(),JavaFileObject.Kind.SOURCE){
               public CharSequence getCharContent(boolean ignoreEncodingErrors) throws IOException {
                 return Files.readString(Path.of(toUri()));
               }
            }
         )
     );
     javacTask.generate();
}

